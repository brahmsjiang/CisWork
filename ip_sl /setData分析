    protected void updateListItems() {
    
        String datas[] = new String[items.size()];
        for(int i = 0; i < items.size(); i++) {
              if(items.get(i) instanceof ListItemModel)
                  datas[i] = ((ListItemModel) items.get(i)).getObjectInJson();
        }
			  String str = JsonEncoder.makeJsonArray(datas);
			  
			 
        QtProvider.updatePageDatas(getPageId(), str);

--------------------------------------------------------
JNIEXPORT jint JNICALL Java_cip_qt_JniNativeQtApi_setData2Qt
	QVariant result = Util::qJsonHelper(cData, &ok);

==>jnifunc的第一个参数pageid传给了PageManager::setData的pageid；第二个参数是上面java层将一个string数组转为str作为实参传入，而又需要转为QVariant-》QVaruiantList

void PageManager::setData(const QString &pageId, const QVariantList& data)
{
//    if (Logger::instance()->checkLevel(MODULEID, Logger::DEBUG_INT))
//        Logger::debug(this, __PRETTY_FUNCTION__, pageId, data);
    Page *page = PageManager::getInstance()->getPage(pageId);
    
    
void Page::setData(const QVariantList& data)
{
    foreach(QVariant item, data) {
        QVariantMap qData = item.toMap();

        ListItem* mItem = getListModel()->find(qData[PageConstants::TAG_ID].toString());
        if(mItem != NULL) {
            mItem->setData(qData);
        }
        else {
            if (Logger::instance()->checkLevel(MODULEID, Logger::NOTICE_INT))
                Logger::notice(this, __FUNCTION__, "Page: " + mPageId + " can't find id: ", qData[PageConstants::TAG_ID]);
        }
    }
}


